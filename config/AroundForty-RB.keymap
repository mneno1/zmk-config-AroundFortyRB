#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

#include <behaviors/rgbled_widget.dtsi>  // needed to use the behaviors
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&lt 5 ESCAPE>;
            key-positions = <36 39>;
            layers = <0>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
            layers = <0>;
        };

        Minus {
            bindings = <&kp MINUS>;
            key-positions = <7 8>;
            layers = <0>;
        };

        Equal {
            bindings = <&kp EQUAL>;
            key-positions = <9 8>;
            layers = <0>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default_Layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R   &kp T                        &kp Y        &kp U           &kp I            &kp O          &kp P
&kp A             &kp S         &kp D         &kp F   &kp G                        &kp H        &kp J           &kp K            &kp L          &kp SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V   &kp B        &kp LANGUAGE_1  &kp N        &kp M           &kp COMMA        &kp PERIOD     &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_ALT  &kp LEFT_GUI  &trans  &lt 4 SPACE  &lt 2 DELETE    &lt 3 ENTER  &kp LANGUAGE_2  &lt 1 BACKSPACE  &kp RIGHT_ALT  &kp RIGHT_CONTROL
            >;
        };

        Num_Layer {
            bindings = <
&kp N1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5          &kp NUMBER_6  &kp N7            &kp NUMBER_8       &kp NUMBER_9  &kp NUMBER_0
&trans  &trans        &kp LPAR      &kp RPAR      &trans                &trans        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans        &kp BACKSLASH
&trans  &trans        &trans        &trans        &trans        &trans  &trans        &trans            &trans             &trans        &kp PIPE
&trans  &trans        &trans        &trans        &trans        &trans  &trans        &trans            &trans             &trans        &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        Function_Layer {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH           &kp DOLLAR        &kp PERCENT           &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp MINUS  &kp UNDERSCORE
&kp GRAVE        &kp TILDE    &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &trans                &mkp MB4   &mkp MB1       &mkp MB2      &kp EQUAL  &kp PLUS
&kp F1           &kp F2       &kp F3             &kp F4            &kp F5       &kp F11  &kp F6     &kp F7         &kp F8        &kp F9     &kp F10
&trans           &trans       &trans             &trans            &trans       &trans   &trans     &kp F12        &trans        &trans     &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        Short-Cut_Layer {
            bindings = <
&kp LS(LC(TAB))  &kp LC(TAB)  &kp LG(E)  &kp LG(R)  &kp LC(T)          &trans    &kp PAGE_UP  &kp UP_ARROW  &kp PAGE_DOWN  &kp PRINTSCREEN
&kp LC(A)        &kp LC(S)    &kp LG(D)  &kp LC(F)  &kp LC(G)          &kp HOME  &kp LEFT     &kp DOWN      &kp RIGHT      &kp END
&kp LC(Z)        &kp LC(X)    &kp LC(C)  &kp LC(V)  &kp LC(B)  &trans  &trans    &kp DELETE   &trans        &trans         &kp INSERT
&trans           &trans       &trans     &trans     &trans     &trans  &trans    &trans       &trans        &trans         &trans
            >;
        };

        Window_Layer {
            bindings = <
&trans            &trans                  &kp LG(LS(UP_ARROW))    &trans                   &trans                           &trans  &trans        &kp LG(UP_ARROW)  &trans         &trans
&kp LC(LG(LEFT))  &kp LS(LG(LEFT_ARROW))  &kp LG(LS(DOWN_ARROW))  &kp LS(LG(RIGHT_ARROW))  &kp LC(LG(RIGHT_ARROW))          &trans  &kp LG(LEFT)  &kp LG(DOWN)      &kp LG(RIGHT)  &trans
&trans            &trans                  &trans                  &trans                   &trans                   &trans  &trans  &trans        &trans            &trans         &trans
&trans            &trans                  &trans                  &trans                   &trans                   &trans  &trans  &trans        &trans            &trans         &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        Setting_Layer {
            bindings = <
&bootloader     &trans  &trans  &trans  &trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&sys_reset      &trans  &trans  &trans  &trans          &trans        &trans        &trans        &trans        &trans
&studio_unlock  &trans  &trans  &trans  &trans  &trans  &ind_bat      &trans        &trans        &trans        &bt BT_CLR
&trans          &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        Auto-Mouse_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans          &trans    &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans          &mkp MB4  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans    &trans
            >;
        };
    };
};
